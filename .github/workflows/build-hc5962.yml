name: Build HC5962
#------------------#
on:
  workflow_dispatch:
#------------------#
env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_TAG: v22.03.2
  CONF_FILE: hc5962/hc5962a.config
  DIY_P1_SH: hc5962/diy-part1.sh
  DIY_P2_SH: hc5962/diy-part2.sh
#------------------#
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
#-----------------------------------------------#
    - name: Checkout
      uses: actions/checkout@main
#-----------------------------------------------#
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt -qqy update
        sudo -E apt -qqy install build-essential gawk gcc-multilib flex git gettext libncurses5-dev libssl-dev python3-distutils zlib1g-dev unzip
#-----------------------------------------------#
    - name: Clone source code
      run: |
       git clone https://github.com/padavanonly/immortalwrt.git $GITHUB_WORKSPACE/immortalwrt
       git clone $REPO_URL -b $REPO_TAG $GITHUB_WORKSPACE/openwrt
#-----------------------------------------------#
    - name: Load custom feeds
      run: cd openwrt && chmod +x $GITHUB_WORKSPACE/$DIY_P1_SH && $GITHUB_WORKSPACE/$DIY_P1_SH
#-----------------------------------------------#
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
#-----------------------------------------------#
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
#-----------------------------------------------#
    - name: Load custom configuration
      run: |
        [ -e $CONF_FILE ] && cp $CONF_FILE openwrt/.config
        cd openwrt && chmod +x $GITHUB_WORKSPACE/$DIY_P2_SH && $GITHUB_WORKSPACE/$DIY_P2_SH
#-----------------------------------------------#
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
#-----------------------------------------------#
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
#-----------------------------------------------#
    - name: Organize files
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
#-----------------------------------------------#
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
#-----------------------------------------------#
    - name: Generate release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "::set-output name=status::success"
#-----------------------------------------------#
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
#-----------------------------------------------#
